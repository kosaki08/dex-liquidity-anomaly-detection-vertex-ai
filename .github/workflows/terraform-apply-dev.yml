# dev への自動デプロイ用
name: "Terraform Apply (dev)"

permissions:
  contents: read
  id-token: write

on:
  push:
    branches: [develop]
    paths: ["terraform/**"]
  workflow_dispatch: # UI から手動トリガー可能

jobs:
  apply:
    runs-on: ubuntu-latest
    concurrency:
      group: terraform-dev-apply
      cancel-in-progress: false # デプロイ中はキャンセルしない
    steps:
      # 1) リポジトリのチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) GCP 認証：Auth
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ secrets.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider
          service_account: tf-apply-dev@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com

      # 3) Terraform をセットアップ
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.8.0

      # 4) Terraform の初期化
      - name: Initialize Terraform
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="bucket=terraform-state-portfolio-vertex-ai-dex" \
            -backend-config="prefix=vertex-ai/dev" \
            -input=false \
            -reconfigure

      # 5) Terraform の適用
      - name: Apply Terraform
        working-directory: terraform
        run: |
          terraform refresh \
            -var "project_id=${{ secrets.PROJECT_ID }}" \
            -var "env_suffix=dev"

          terraform apply \
            -var "project_id=${{ secrets.PROJECT_ID }}" \
            -var "env_suffix=dev" \
            -input=false \
            -auto-approve \
            -lock-timeout=300s
